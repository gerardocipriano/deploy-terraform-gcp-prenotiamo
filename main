provider "google" {
  credentials = file("prenotiamo-52276ba2c593.json")
  project = var.my-project
  region  = "asia-east1"
}

data "google_client_config" "default" {}

variable "my-project" {
  type        = string
  description = "The ID of the Google Cloud project"
}
variable "smtp_server" {
  type        = string
  description = "The SMTP server to use for sending emails"
}

variable "smtp_username" {
  type        = string
  description = "The username for the SMTP server"
}

variable "mailtrap_secret" {
  type        = string
  description = "The secret for Mailtrap"
}

variable "db_name" {
  type        = string
  description = "The name of the database"
}

variable "db_service_user" {
  type        = string
  description = "The database service user"
}

variable "db_service_user_password" {
  type        = string
  description = "The password for the database service user"
}

variable "db_service_admin" {
  type        = string
  description = "The database service admin user"
}

variable "db_service_admin_password" {
  type        = string
  description = "The password for the database service admin user"
}

variable "jwt_secret" {
  type        = string
  description = "The secret for JWT authentication"
}

variable "cookie_name" {
  type        = string
  description = "The name of the cookie used for authentication"
}

resource "google_container_cluster" "prenotiamo_cluster" {
  name     = "prenotiamo-cluster"
  location = "asia-east1-a"

  node_pool {
    name       = "default-pool"
    node_count = 1

    node_config {
      preemptible  = true
      machine_type = "n1-standard-1"
    }
  }
}

data "google_container_cluster" "cluster" {
  name     = google_container_cluster.prenotiamo_cluster.name
  location = google_container_cluster.prenotiamo_cluster.location
}

provider "kubernetes" {
  host                   = "https://${data.google_container_cluster.cluster.endpoint}"
  token                  = data.google_client_config.default.access_token
  cluster_ca_certificate = base64decode(data.google_container_cluster.cluster.master_auth.0.cluster_ca_certificate)
}

resource "google_storage_bucket" "sql_bucket" {
  name     = "prenotiamo-sql-bucket"
  location = "asia-east1"
  force_destroy = true

}

resource "google_sql_database_instance" "prenotiamo_instance" {
  name             = "prenotiamo-instance"
  database_version = "MYSQL_5_7"
  region           = "asia-east1"
  deletion_protection = false

  settings {
    tier = "db-n1-standard-1"

  }
}

resource "google_sql_database" "prenotiamo_database" {
  name     = "prenotiamo-database"
  instance = google_sql_database_instance.prenotiamo_instance.name
}

resource "google_sql_user" "service_user" {
  name     = "prenotiamo_svc_ws"
  instance = google_sql_database_instance.prenotiamo_instance.name
  password = var.db_service_user_password
}

resource "google_sql_user" "admin_user" {
  name     = "prenotiamo_svcadm_ws"
  instance = google_sql_database_instance.prenotiamo_instance.name
  password = var.db_service_admin_password
}


resource "null_resource" "populate_db" {
  depends_on = [google_sql_user.admin_user, google_sql_database.prenotiamo_database]

  provisioner "local-exec" {
    command = "mysql --host=${google_sql_database_instance.prenotiamo_instance.public_ip_address} --user=${google_sql_user.admin_user.name} --password=${google_sql_user.admin_user.password} ${google_sql_database.prenotiamo_database.name} < script.sql"
  }
}

resource "kubernetes_secret" "prenotiamo_secret" {
  metadata {
    name = "prenotiamo-secret"
  }

  data = {
    SMTP_SERVER                = var.smtp_server
    SMTP_USERNAME              = var.smtp_username
    MAILTRAP_SECRET            = var.mailtrap_secret
    DB_HOSTNAME                = google_sql_database_instance.prenotiamo_instance.public_ip_address
    DB_NAME                    = var.db_name
    DB_SERVICE_USER            = var.db_service_user
    DB_SERVICE_USER_PASSWORD   = var.db_service_user_password
    DB_SERVICE_ADMIN           = var.db_service_admin
    DB_SERVICE_ADMIN_PASSWORD  = var.db_service_admin_password
    JWT_SECRET                 = var.jwt_secret
    COOKIE_NAME                = var.cookie_name
  }
}

resource "kubernetes_deployment" "prenotiamo_deployment" {
  metadata {
    name = "prenotiamo-deployment"
  }

  spec {
    replicas = 1

    selector {
      match_labels = {
        app = "prenotiamo"
      }
    }

    template {
      metadata {
        labels = {
          app = "prenotiamo"
        }
      }

      spec {
        container {
          name  = "prenotiamo"
          image = "gcr.io/${var.my-project}/prenotiamo-image:latest"
          env_from {
            secret_ref {
              name = "prenotiamo-secret"
            }
          }
          port {
            container_port = 3000
          }
        }
      }
    }
  }
}

resource "kubernetes_service" "prenotiamo_service" {
  metadata {
    name = "prenotiamo-service"
  }
  spec {
    selector = {
      app = "prenotiamo"
    }
    port {
      port        = 80
      target_port = 3000
    }
    type = "LoadBalancer"
  }
}